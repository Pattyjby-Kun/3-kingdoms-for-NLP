# src/relationship_ai.py
import json
from pythainlp.tokenize import sent_tokenize
from transformers import pipeline

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• WangchanBERTa ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Zero-shot classification
print("‚öôÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏• WangchanBERTa...")
pipe = pipeline("zero-shot-classification", model="airesearch/wangchanberta-base-att-spm-uncased")
print("‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")

def ai_infer_relationship(char1, char2, sentence):
    """
    ‡πÉ‡∏ä‡πâ WangchanBERTa ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£ 2 ‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ
    """
    labels = ["‡∏û‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏á", "‡∏®‡∏±‡∏ï‡∏£‡∏π", "‡πÄ‡∏à‡πâ‡∏≤‡∏ô‡∏≤‡∏¢-‡∏•‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏á", "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"]
    hypothesis = f"{char1} ‡πÅ‡∏•‡∏∞ {char2} ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏ö‡∏ö"
    
    result = pipe(sentence, candidate_labels=labels, hypothesis_template=hypothesis)
    relation = result["labels"][0]
    return relation


def find_relations_ai(file_path, character_list_path=r"D:\Trump\data\character_list.json",
                      output_path=r"D:\Trump\output\chapter1_relations_ai.json"):
    """
    ‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå chapter, ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå ‡πÅ‡∏•‡πâ‡∏ß‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô JSON
    """
    # ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏±‡∏ß‡∏•‡∏∞‡∏Ñ‡∏£
    with open(character_list_path, "r", encoding="utf-8") as f:
        characters = json.load(f)["characters"]

    # ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤
    with open(file_path, "r", encoding="utf-8") as f:
        text = f.read()

    sentences = sent_tokenize(text)
    relations = []

    print("üîç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏à‡∏≤‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤...")

    for sent in sentences:
        found = [c for c in characters if c in sent]
        if len(found) >= 2:
            for i in range(len(found)):
                for j in range(i + 1, len(found)):
                    relation = ai_infer_relationship(found[i], found[j], sent)
                    if relation != "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•":
                        relations.append({
                            "character_1": found[i],
                            "relationship": relation,
                            "character_2": found[j],
                            "sentence": sent.strip()
                        })
                        print(f"{found[i]} ‚Äî({relation})‚Üí {found[j]}")

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡∏á‡πÑ‡∏ü‡∏•‡πå JSON
    with open(output_path, "w", encoding="utf-8") as f:
        json.dump(relations, f, ensure_ascii=False, indent=4)

    print(f"\n‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏ó‡∏µ‡πà: {output_path}")
    return relations


if __name__ == "__main__":
    path = r"D:\Trump\data\cleaned\chapter1_cleaned.txt"
    find_relations_ai(path)
